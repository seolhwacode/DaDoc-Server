<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="users">
	<sql id="allColumn">
		id, pwd, name, nickname, sex, profile, regdate, pwd_question, pwd_answer, tos, tel, email
	</sql>

	<!-- 비밀번호 분실시 선택할 질문 list return -->
	<select id="getPwdQuestions" resultType="usersPwdQuestionDto">
		SELECT num, question
		FROM users_pwd_question
	</select>
	<!-- id 가 존재하는지 검사 -->
	<select id="isIdExist" parameterType="string" resultType="string">
		SELECT id
		FROM dadoc_users
		WHERE id = #{inputId}
	</select>
	<!-- nickname 이 존재하는지 검사 -->
	<select id="isNickExist" parameterType="string" resultType="string">
		SELECT nickname
		FROM dadoc_users
		WHERE nickname = #{inputNick}
	</select>
	<!-- 사용자 정보 insert -->
	<insert id="insert" parameterType="usersDto">
		INSERT INTO dadoc_users
		(<include refid="allColumn"/>, birth)
		VALUES (#{id}, #{pwd}, #{name}, #{nickname}, #{sex}, #{profile}, SYSDATE, #{pwd_question}, #{pwd_answer}, #{tos}, #{tel, jdbcType=VARCHAR}, #{email, jdbcType=VARCHAR}, #{birth})
	</insert>
	<!-- id 에 해당하는 사용자 정보를 가져옴 -->
	<select id="getData" parameterType="string" resultType="usersDto">
		SELECT <include refid="allColumn"/>, TO_CHAR(birth, 'YYYY-MM-DD') AS birth
		FROM dadoc_users
		WHERE id = #{id}
	</select>
	<!-- id 에 해당하는 pwd_question 의 string 을 가져옴 -->
	<select id="getQuestion" parameterType="string" resultType="string">
		SELECT question
		FROM users_pwd_question
		WHERE num = (SELECT pwd_question
				FROM dadoc_users
				WHERE id = #{ id })
	</select>
	<!-- id 에 해당하는 pwd_answer 의 string 값을 읽어온다. -->
	<select id="getAnswer" parameterType="string" resultType="string">
		SELECT pwd_answer
		FROM dadoc_users
		WHERE id = #{ id }
	</select>
	<!-- 암호화된 비밀번호 db 에 update -->
	<update id="updatePwd" parameterType="usersDto">
		UPDATE dadoc_users
		SET pwd = #{ pwd }
		WHERE id = #{ id }
	</update>
	<!-- profile 을 update -->
	<update id="updateProfile" parameterType="usersDto">
		UPDATE dadoc_users
		SET profile = #{ profile }
		WHERE id = #{ id }
	</update>
	<!-- 사용자 데이터를 update -->
	<update id="updateUserData" parameterType="usersDto">
		UPDATE dadoc_users
		SET name = #{ name }, nickname = #{ nickname }, sex = #{ sex }, birth = #{ birth }, 
			pwd_question = #{ pwd_question }, pwd_answer = #{ pwd_answer }, tos = #{ tos }, 
			tel = #{ tel, jdbcType=VARCHAR }, email = #{ email, jdbcType=VARCHAR }
		WHERE id = #{ id }
	</update>
	<!-- 사용자 삭제 -->
	<update id="deleteUser" parameterType="string">
		DELETE FROM dadoc_users
		WHERE id = #{ id }
	</update>
</mapper>
